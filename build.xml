<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="main"  basedir="../.." name="Integration-JBoss50">
  
  <import file="${basedir}/build/ant-import/build-setup.xml"/>
  
  <import file="${int.jboss50.dir}/ant-import/build-thirdparty.xml"/>
  
  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->
  
  <property name="jbws50.dir" value="${int.jboss50.dir}"/>
  <property name="jbws50.src.dir" value="${jbws50.dir}/src/main"/>
  <property name="jbws50.etc.dir" value="${jbws50.src.dir}/etc"/>
  <property name="jbws50.java.dir" value="${jbws50.src.dir}/java"/>
  <property name="jbws50.resources.dir" value="${jbws50.src.dir}/resources"/>
  <property name="jbws50.output.dir" value="${jbws50.dir}/output"/>
  <property name="jbws50.output.classes.dir" value="${jbws50.output.dir}/classes"/>
  <property name="jbws50.output.etc.dir" value="${jbws50.output.dir}/etc"/>
  <property name="jbws50.output.lib.dir" value="${jbws50.output.dir}/lib"/>
	
  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->
  
  <target name="init" depends="prepare,thirdparty">
    <fail message="Not available: ${jboss50.available.file}" unless="jboss50.available"/>
    <ant antfile="${core.dir}/build.xml" target="main" inheritall="false"/>
  </target>
  
  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->
  
  <!--
  | Compile everything.
  |
  | This target should depend on other compile-* targets for each
  | different type of compile that needs to be performed, short of
  | documentation compiles.
  -->
  
  <target name="compile" depends="init,compile-classes,compile-etc" description="Compile all source files."/>
  
  <!-- Compile java sources -->
  <target name="compile-classes" depends="init">
    <mkdir dir="${jbws50.output.classes.dir}"/>
    <javac srcdir="${jbws50.java.dir}" sourcepath="" destdir="${jbws50.output.classes.dir}" encoding="utf-8" debug="${javac.debug}" verbose="${javac.verbose}"
      deprecation="${javac.deprecation}" failonerror="${javac.fail.onerror}">
      <include name="org/jboss/ws/integration/jboss50/**"/>
      <classpath refid="jbws50.integration.classpath"/>
    </javac>
  </target>
  
  <!-- Compile etc files (manifests and such) -->
  <target name="compile-etc" depends="init">
    <mkdir dir="${jbws50.output.etc.dir}"/>
    <copy todir="${jbws50.output.etc.dir}" filtering="yes" overwrite="yes">
      <fileset dir="${jbws50.etc.dir}">
        <include name="component-info.xml"/>
  	  </fileset>
      <fileset dir="${build.dir}/etc">
        <include name="default.mf"/>
  	  </fileset>
      <filterset>
        <filter token="java.vm.version" value="${java.vm.version}"/>
        <filter token="java.vm.vendor" value="${java.vm.vendor}"/>
        <filter token="build.id" value="${build.id}"/>
        <filter token="implementation.version" value="jbossws-${version.id}"/>
        <filtersfile file="${build.dir}/version.properties"/>
      </filterset>
    </copy>
  </target>
  
  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->
  
  <!--
  | Build all jar files.
  -->
  <target name="jars" depends="compile,module-jars" description="Builds all jar files.">
  </target>
  
  <!--
  |  Build all jar files.
  -->
  <target name="module-jars" depends="init">
    
    <!-- Build jbossws-jboss50.jar -->
    <mkdir dir="${jbws50.output.lib.dir}"/>
    <jar jarfile="${jbws50.output.lib.dir}/jbossws-jboss50.jar" manifest="${jbws50.output.etc.dir}/default.mf">
      <fileset dir="${jbws50.output.classes.dir}">
        <include name="org/jboss/ws/integration/jboss50/**"/>
      </fileset>
      <metainf dir="${jbws50.resources.dir}/jbossws-jboss50.jar/META-INF"/>
    </jar>
    
    <!-- Build jbossws-context.war -->
    <war warfile="${jbws50.output.lib.dir}/jbossws50-context.war" webxml="${jbws50.resources.dir}/jbossws-context.war/WEB-INF/web.xml">
      <fileset dir="${jbws50.resources.dir}/jbossws-context.war">
        <include name="index.html"/>
        <include name="styles.css"/>
      </fileset>
      <webinf dir="${jbws50.resources.dir}/jbossws-context.war/WEB-INF">
        <include name="jboss-web.xml"/>
      </webinf>
    </war>
    
    <!-- Build jbossws50.sar -->
    <jar jarfile="${jbws50.output.lib.dir}/jbossws50.sar" manifest="${jbws50.output.etc.dir}/default.mf">
      <!-- [JBAS-4379] MC beans deployed twice because of jacc service
      <fileset dir="${jbws50.output.lib.dir}">
        <include name="jbossws-context.war"/>
      </fileset>
      -->
      <fileset dir="${core.dir}/output/lib">
        <include name="jbossws-core.jar"/>
      </fileset>
      <fileset dir="${core.dir}/thirdparty">
        <include name="policy.jar"/>
        <include name="wsdl4j.jar"/>
        <include name="xmlsec.jar"/>
      </fileset>
      <metainf dir="${core.dir}/src/main/resources/standard-config">
        <include name="standard-*-config.xml"/>
      </metainf>
      <metainf dir="${jbws50.resources.dir}/jbossws.sar/META-INF">
        <include name="jbossws-beans.xml"/>
      </metainf>
    </jar>
    
    <!-- Build jbossws50.deployer -->
    <zip zipfile="${jbws50.output.lib.dir}/jbossws50-deployer.zip">
      <fileset dir="${jbws50.output.lib.dir}">
        <include name="jbossws-jboss50.jar"/>
      </fileset>
      <fileset dir="${jbws50.resources.dir}/jbossws.deployer">
        <include name="META-INF/jbossws-deployer-beans.xml"/>
      </fileset>
    </zip>
    
    <!-- Build jbossws50-src.zip -->
    <zip zipfile="${jbws50.output.lib.dir}/jbossws50-src.zip" >
      <fileset dir="${jbws50.java.dir}"/>
    </zip>
    
   </target>
  
  <!-- ================================================================== -->
  <!-- Miscellaneous                                                       -->
  <!-- ================================================================== -->
  
  <target name="clean" depends="prepare" description="Cleans up most generated files.">
    <delete dir="${jbws50.output.dir}"/>
  </target>
  
  <target name="clobber" depends="clean" description="Cleans up all generated files.">
    <delete dir="${int.jboss50.dir}/output-tests"/>
  </target>
  
  <target name="main" description="Executes the default target (most)." depends="most"/>
  
  <target name="most" description="Builds almost everything." depends="jars"/>
  
  <target name="all" description="Create a distribution zip file" depends="most">
  </target>
  
</project>
