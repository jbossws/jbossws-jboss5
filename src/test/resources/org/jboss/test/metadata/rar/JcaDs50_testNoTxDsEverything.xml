<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<datasources xmlns="http://www.jboss.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee
                            http://www.jboss.org/j2ee/schema/jboss-ds_5_0.xsd">
   <no-tx-datasource>

      <!-- The jndi name of the DataSource, it is prefixed with java:/ -->
      <!-- Datasources are not available outside the virtual machine -->
      <jndi-name>DefaultDS</jndi-name>

      <use-java-context>false</use-java-context>

      <!-- For in-process persistent db, saved when jboss stops.
      The org.jboss.jdbc.HypersonicDatabase mbean is required for proper db shutdown
      -->
      <connection-url>jdbc:hsqldb:${jboss.server.data.dir}${/}hypersonic${/}localDB</connection-url>

      <url-delimiter>|</url-delimiter>

      <url-selector-strategy-class-name>org.jboss.jca.UrlStratery</url-selector-strategy-class-name>

      <!-- The driver class -->
      <driver-class>org.hsqldb.jdbcDriver</driver-class>

      <connection-property name="char.encoding">UTF-8</connection-property>
      <connection-property name="time.zone">+8</connection-property>

      <!-- The login and password -->
      <user-name>sa</user-name>
      <password></password>
      
      
      <!-- Use the getConnection(user, pw) for logins
        <application-managed-security/>
      -->

      <!-- Use the security domain defined in conf/login-config.xml -->
      <security-domain>HsqlDbRealm</security-domain>

      <!-- Use the security domain defined in conf/login-config.xml or the
           getConnection(user, pw) for logins. The security domain takes precedence.
        <security-domain-and-application>HsqlDbRealm</security-domain-and-application>
      -->


      <!-- The minimum connections in a pool/sub-pool. Pools are lazily constructed on first use -->
      <min-pool-size>5</min-pool-size>

      <!-- The maximum connections in a pool/sub-pool -->
      <max-pool-size>20</max-pool-size>

      <blocking-timeout-millis>30000</blocking-timeout-millis>

      <background-validation>true</background-validation>
      <background-validation-millis>3000</background-validation-millis>

      <!-- The time before an unused connection is destroyed -->
      <!-- NOTE: This is the check period. It will be destroyed somewhere between 1x and 2x this timeout after last use -->
      <!-- TEMPORARY FIX! - Disable idle connection removal, HSQLDB has a problem with not reaping threads on closed connections -->
      <idle-timeout-minutes>0</idle-timeout-minutes>

      <allocation-retry>0</allocation-retry>
      <allocation-retry-wait-millis>5000</allocation-retry-wait-millis>

      <validate-on-match>true</validate-on-match>

      <!-- sql to call when connection is created      -->
      <new-connection-sql>some arbitrary sql</new-connection-sql>


      <!-- this will be run before a managed connection is removed from the pool for use by a client-->
      <check-valid-connection-sql>select * from something</check-valid-connection-sql>


      <!-- example of how to specify a class that determines a connection is valid before it is handed out from the pool      -->
      <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyValidConnectionChecker</valid-connection-checker-class-name>

      <!--example of how to specify class that determines if exception means connection should be destroyed-->
      <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter</exception-sorter-class-name>
      <stale-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.StaleConnectionChecker</stale-connection-checker-class-name>

      <!-- Whether to check all statements are closed when the connection is returned to the pool,
           this is a debugging feature that should be turned off in production -->
      <track-statements/>

      <prefill>true</prefill>

      <!-- HSQL DB benefits from prepared statement caching -->
      <prepared-statement-cache-size>32</prepared-statement-cache-size>
      <share-prepared-statements>true</share-prepared-statements>

      <set-tx-query-timeout>true</set-tx-query-timeout>

      <query-timeout>300</query-timeout>
      <use-try-lock>300000</use-try-lock>

      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional)       -->
      <type-mapping>Hypersonic SQL</type-mapping>

      <!-- 
       When using in-process (standalone) mode 
       Uncomment when using hsqldb in server mode
      -->

      <depends>jboss:service=Hypersonic,database=localDB</depends>
      <depends>jboss:service=Hypersonic</depends>
   </no-tx-datasource>

</datasources>
